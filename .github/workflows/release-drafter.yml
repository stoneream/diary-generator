name: Release Drafter

on:
  push:
    branches:
      - main
    paths:
      - version.go

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
      - name: Extract version from version.go
        id: extract_version
        run: echo "version=$(grep -oP 'Version = "\K[^"]+' version.go)" >> $GITHUB_OUTPUT
      - name: Install dependencies
        run: go get .
      # Windows
      - name: Build for Windows
        run: GOOS=windows GOARCH=amd64 go build -o diary-generator_windows_amd64/diary-generator.exe .
      # MacOS (Intel)
      - name: Build for MacOS (Intel)
        run: GOOS=darwin GOARCH=amd64 go build -o diary-generator_darwin_amd64/diary-generator .
      # MacOS (Apple Silicon)
      - name: Build for MacOS (Apple Silicon)
        run: GOOS=darwin GOARCH=arm64 go build -o diary-generator_darwin_arm64/diary-generator .
      # Linux
      - name: Build for Linux
        run: GOOS=linux GOARCH=amd64 go build -o diary-generator_linux_amd64/diary-generator .
      - name: Create Tag
        if: steps.extract_version.outputs.version != ''
        run: |
          VERSION=${{ steps.extract_version.outputs.version }}
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag "v${VERSION}"
          git push origin "v${VERSION}"
      - name: Create Release Draft
        if: steps.extract_version.outputs.version != ''
        id: create_release_draft
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          name: v${{ steps.extract_version.outputs.version }}
          tag_name: v${{ steps.extract_version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Zip Assets
        run: |
          zip -r diary-generator_windows_amd64.zip diary-generator_windows_amd64
          zip -r diary-generator_darwin_amd64.zip diary-generator_darwin_amd64
          zip -r diary-generator_darwin_arm64.zip diary-generator_darwin_arm64
          zip -r diary-generator_linux_amd64.zip diary-generator_linux_amd64
      - name: Upload Asset for Windows
        if: steps.create_release_draft.outputs.upload_url != ''
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.create_release_draft.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/diary-generator_windows_amd64.zip
          asset_name: "diary-generator_windows_amd64.zip"
          overwrite: true # すでに存在する場合は上書き
          asset_content_type: application/zip
      - name: Upload Asset for MacOS (Intel)
        if: steps.create_release_draft.outputs.upload_url != ''
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.create_release_draft.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/diary-generator_darwin_amd64.zip
          asset_name: "diary-generator_darwin_amd64.zip"
          overwrite: true # すでに存在する場合は上書き
          asset_content_type: application/zip
      - name: Upload Asset for MacOS (Apple Silicon)
        if: steps.create_release_draft.outputs.upload_url != ''
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.create_release_draft.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/diary-generator_darwin_arm64.zip
          asset_name: "diary-generator_darwin_arm64.zip"
          overwrite: true # すでに存在する場合は上書き
      - name: Upload Asset for Linux
        if: steps.create_release_draft.outputs.upload_url != ''
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.create_release_draft.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/diary-generator_linux_amd64.zip
          asset_name: "diary-generator_linux_amd64.zip"
          overwrite: true # すでに存在する場合は上書き
          asset_content_type: application/zip
